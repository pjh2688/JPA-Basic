##JSP
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp

#Oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

#AWS
##spring.datasource.url=jdbc:oracle:thin:@ec2-15-165-131-90.ap-northeast-2.compute.amazonaws.com:1521/xe

#LOCAL
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe

spring.datasource.username=scott
spring.datasource.password=tiger

#mybatis/mapper 폴더 아래의 모든폴더의 (**) 모든 xml(**.xml)을 사용한다고 지정.
#안써주면 mapper logic 사용시 오류남.
#MYBATIS
mybatis.mapper-locations=classpath:mybatis/mapper/**/**.xml

#jsp페이지를 수정하고 저장한 뒤 웹 페이지에서 새로고침해도 적용이 안될 때 추가.
server.servlet.jsp.init-parameters.development=true

#JPA[영속성 컨텍스트 설정] -> spring.io에서 springboot 해당 버전(2.3.3) Reference Doc 들어가서 확인
#https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties

# create, create-drop, validate, update, none
spring.jpa.hibernate.ddl-auto=create
# DDL 생성시 데이터베이스고유의 기능을 사용하는지에 대한 유무
spring.jpa.generate-ddl=false
# jpa나 hibernate를 통해 CRUD를 실행하면 해당 CRUD의 SQL 로깅을 보여줄지에 대한 유무
spring.jpa.show-sql=true
# 사용하는 데이터베이스를 지정
spring.jpa.database=oracle
# 사용하려는 데이터베이스에 맞는 Dialect 지정(hibernate가 각 데이터베이스에 맞게 SQL을 처리해주기 위해서)
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
# 로깅에 표시되는 SQL을 보기 좋게 바꿔주는 기능
spring.jpa.properties.hibernate.format_sql=true
# hibernate logging level 설정 -> info, debug가 있는데 debug가 좀 더 자세히 보여준다.
logging.level.org.hibernate.sql=info
# hibernate logging type 설정 -> trace로 설정 해놓으면 로깅에 ?에 해당하는 데이터를 따로 출력해준다.
logging.level.org.hibernate.type=trace


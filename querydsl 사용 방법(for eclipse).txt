1. build.gradle에 추가

// 14-1. queryDSL을 위한 dependency

implementation 'com.querydsl:querydsl-jpa'

implementation 'com.querydsl:querydsl-apt'

/* 14-2. queryDSL을 위한 dependency를 받기 위해서 buildscript를 적어준다 */

buildscript {

 dependencies {

 classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")

 }

}

/* 14-3. queryDSL plugin apply */

apply plugin: "com.ewerk.gradle.plugins.querydsl"

/* 14-4. querydsl */

def querydslDir = 'src/main/generated'

querydsl {

 library = "com.querydsl:querydsl-apt"

 jpa = true

 querydslSourcesDir = querydslDir

}

sourceSets {

 main {

 java {

 srcDirs = ['src/main/java', querydslDir]

 }

 }

}

compileQuerydsl {

 options.annotationProcessorPath = configurations.querydsl

}

configurations {

 querydsl.extendsFrom compileClasspath

}

2. 1번을 다 입력했다면 gradle represh 한번 해주고

3-1. 첫번째 방법

(1) cmd 창을 켜서 프로젝트가 저장되어 있는 폴더 경로로 들어간다. -> 여기서는 D:\workspace(jpa)\shopJpa

(2) .\gradlew build를 실행

(3)  src 밑에 generated폴더가  생성된다.

3-2. 두번째 방법

(1) 이클립스 상단 메뉴에서 window 클릭

(2) Show View -> other -> gradle 검색 -> Gradle Task 클릭

(3) Gradle Task에서 해당 프로젝트를 더블클릭 

(4) build 폴더로 가서 build를 선택 후 마우스 오른쪽 클릭

(5) Run Gradle Tasks를 클릭하면 src 밑에 generated 폴더가 생성된다.

4. 프로젝트에 새로 생긴 generated의 경로를 추가해줘야 사용 가능

 (1) 프로젝트 우클릭 -> Properties ->Java build Path

 (2) Source 탭에서 Add Folder... 클릭

 (3) src 밑에 새로 생긴 generated폴더 체크 후 확인

 (4) apply 클릭 후 확인

 (5) 이제 src/main/java에서 src/main/generated를 접근해서 사용할 수 있다.